import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import TopProgress from '../components/TopProgress';

import { NextIntlClientProvider } from 'next-intl';
import i18nConfig from '../../i18n';

import LandingHeader from "../components/header-secondary";
import Footer from "../components/footer";

import "./../globals.css";
import style from "./../page.module.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout(props: {
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}) {
  const { children } = props;
  const { locale } = await props.params;
  // Now you can use `locale` safely
  const config = await i18nConfig({
    locale,
    requestLocale: Promise.resolve(locale),
  });

  if (!config) {
    console.error(`Invalid or missing locale: ${locale}`);
    return (
      <html lang="en">
        <body className={`${style.netflixbg} ${geistSans.variable} ${geistMono.variable} antialiased`}>
          <NextIntlClientProvider locale="en" messages={{}}>
            {children}
          </NextIntlClientProvider>
        </body>
      </html>
    );
  }
  else {
    return (
      <html lang={config.locale}>
        <body className={`${style.netflixbg} ${geistSans.variable} ${geistMono.variable} antialiased min-h-screen`}>
          <NextIntlClientProvider messages={config.messages}>
            <TopProgress />
            <LandingHeader />
            {children}
            <Footer />
          </NextIntlClientProvider>
        </body>
      </html>
    );
  }
}
