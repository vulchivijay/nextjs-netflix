import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import TopProgress from '../components/TopProgress';

import { NextIntlClientProvider } from 'next-intl';
import i18nConfig from '../../i18n';

import "./../globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params: { locale }
}: Readonly<{
  children: React.ReactNode;
  params: { locale: string }
}>) {
  const config = await i18nConfig({ locale });
  if (!config) {
    console.error(`Invalid or missing locale: ${locale}`);
    return (
      <html lang="en">
        <body>
          <NextIntlClientProvider messages={{}}>
            {children}
          </NextIntlClientProvider>
        </body>
      </html>
    );
  }
  else {
    return (
      <html lang={config?.locale}>
        <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
          <NextIntlClientProvider messages={config?.messages}>
            <TopProgress />
            {children}
          </NextIntlClientProvider>
        </body>
      </html>
    );
  }
}
